#######################################################################################################################
#                                               Customers SQL properties                                              #
#######################################################################################################################
customer.insertSQL = INSERT INTO customers (first_name, last_name, email, phone, password, role_id) \
                     VALUES (?, ?, ?, ?, ?, ?)

customer.update = UPDATE customers \
                  SET id = ?, first_name = ?, last_name = ?, email = ?, phone = ?, password = ?, role_id = ? \
                  WHERE id = ?

customer.delete = DELETE FROM customers WHERE id = ?

customer.selectById = SELECT customers.id, first_name, last_name, email, phone, password, role_value as role \
                         FROM customers \
                         LEFT JOIN roles ON roles.role_id = customers.role_id \
                         WHERE customers.id = ?

customer.selectByEmail = SELECT customers.id, first_name, last_name, email, phone, password, role_value as role \
                         FROM customers \
                         LEFT JOIN roles ON roles.role_id = customers.role_id \
                         WHERE email = ?

#######################################################################################################################
#                                               Managers SQL properties                                               #
#######################################################################################################################
manager.insertSQL = INSERT INTO managers (first_name, last_name, email, phone, password, role_id) VALUES (?, ?, ?, ?, ?, ?)

manager.update = UPDATE managers SET id = ?, first_name = ?, last_name = ?, email = ?, phone = ?, password = ?, role_id = ? \
                 WHERE id = ?

manager.delete = DELETE FROM managers WHERE id = ?

manager.selectById = SELECT managers.id, first_name, last_name, email, phone, password, role_value as role, \
                     COUNT(projects.id) as projects_served \
                     FROM managers \
                     LEFT JOIN roles ON roles.role_id = managers.role_id \
                     LEFT JOIN projects ON projects.manager_id = managers.id \
                     WHERE managers.id = ? \
                     GROUP BY managers.id, first_name, last_name, email, phone, password, role

manager.selectByEmail = SELECT managers.id, first_name, last_name, email, phone, password, role_value as role, \
                        COUNT(projects.id) as projects_served \
                        FROM managers \
                        LEFT JOIN roles ON roles.role_id = managers.role_id \
                        LEFT JOIN projects ON projects.manager_id = managers.id \
                        WHERE email = ? \
                        GROUP BY managers.id, first_name, last_name, email, phone, password, role

#######################################################################################################################
#                                              Developers SQL properties                                              #
#######################################################################################################################
developer.insertSQL = INSERT INTO developers (first_name, last_name, email, phone, password, specialization, rank, \
                      hire_cost, status, role_id) \
                      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

developer.update = UPDATE developers SET id = ?, first_name = ?, last_name = ?, email = ?, phone = ?, \
                   password = ?, specialization = ?, rank = ?, hire_cost = ?, status = ?, role_id = ? \
                   WHERE id = ?

developer.updateStatusByProject = UPDATE developers SET status = ? \
                                  WHERE id IN(SELECT developer_id FROM task_developers \
                                  WHERE task_id IN(SELECT id FROM project_tasks WHERE project_id = ?))

developer.delete = DELETE FROM developers WHERE id = ?

developer.selectById = SELECT developers.id, first_name, last_name, email, phone, password, role_value as role, \
                       task_id as active_task_id, hire_cost, specialization, rank, developers.status \
                       FROM developers \
                       INNER JOIN roles ON roles.role_id = developers.role_id \
                       LEFT JOIN task_developers \
                       ON (task_developers.developer_id = developers.id AND task_developers.status = 'Running') \
                       WHERE developers.id = ?

developer.selectByEmail = SELECT developers.id, first_name, last_name, email, phone, password, role_value as role, \
                          task_id as active_task_id, hire_cost, specialization, rank, developers.status \
                          FROM developers \
                          INNER JOIN roles ON roles.role_id = developers.role_id \
                          LEFT JOIN task_developers \
                          ON (task_developers.developer_id = developers.id AND task_developers.status = 'Running') \
                          WHERE email = ?

developer.selectAvailableBySpecAndRank = SELECT developers.id, first_name, last_name, email, phone, password, role_value as role, \
                                         task_id as active_task_id, hire_cost, specialization, rank, developers.status \
                                         FROM developers \
                                         INNER JOIN roles ON roles.role_id = developers.role_id \
                                         LEFT JOIN task_developers \
                                         ON (task_developers.developer_id = developers.id AND task_developers.status = 'Running') \
                                         WHERE specialization = ? AND rank = ? AND task_id IS NULL

developer.selectAvailableBySpecAndRankAndLastname = SELECT developers.id, first_name, last_name, email, phone, password, \
                                                    role_value as role, task_id as active_task_id, hire_cost, specialization, \
                                                    rank, developers.status \
                                                    FROM developers \
                                                    INNER JOIN roles ON roles.role_id = developers.role_id \
                                                    LEFT JOIN task_developers \
                                                    ON (task_developers.developer_id = developers.id \
                                                    AND task_developers.status = 'Running') \
                                                    WHERE specialization = ? AND rank = ? AND LOWER(last_name) \
                                                    LIKE LOWER(?) AND task_id IS NULL


developer.selectBySpecAndRank = SELECT developers.id, first_name, last_name, email, phone, password, role_value as role, \
                                task_id as active_task_id, hire_cost, specialization, rank, developers.status \
                                FROM developers \
                                INNER JOIN roles ON roles.role_id = developers.role_id \
                                LEFT JOIN task_developers \
                                ON (task_developers.developer_id = developers.id AND task_developers.status = 'Running') \
                                WHERE specialization = ? AND rank = ?

developer.selectBySpecAndRankAndLastname = SELECT developers.id, first_name, last_name, email, phone, password, \
                                           role_value as role, task_id as active_task_id, hire_cost, specialization, rank, \
                                           developers.status \
                                           FROM developers \
                                           INNER JOIN roles ON roles.role_id = developers.role_id \
                                           LEFT JOIN task_developers \
                                           ON (task_developers.developer_id = developers.id \
                                           AND task_developers.status = 'Running') \
                                           WHERE specialization = ? AND rank = ? LOWER(last_name) LIKE LOWER(?)

#######################################################################################################################
#                                              Technical Task SQL properties                                          #
#######################################################################################################################
technicalTask.insertSQL = INSERT INTO technical_tasks (customer_id, name, description, status, manager_commentary) \
                          VALUES (?, ?, ?, ?, ?)

technicalTask.update = UPDATE technical_tasks SET id = ?, customer_id = ?, name = ?, description = ?, status = ?, \
                       manager_commentary = ? \
                       WHERE id = ?

technicalTask.delete = DELETE FROM technical_tasks WHERE id = ?

technicalTask.selectById = SELECT * FROM technical_tasks WHERE id = ?

technicalTask.selectAll = SELECT * FROM technical_tasks

technicalTask.selectByCustomerId = SELECT * FROM technical_tasks WHERE customer_id = ?

technicalTask.selectAllNew = SELECT * FROM technical_tasks WHERE status = 'New'

#######################################################################################################################
#                                              Operations SQL properties                                              #
#######################################################################################################################
operations.insertSQL = INSERT INTO technical_task_operations (technical_task_id, name, description) VALUES (?, ?, ?)

operations.update = UPDATE technical_task_operations SET id = ?, technical_task_id = ?, name = ?, description = ? \
                    WHERE id = ?

operations.delete = DELETE FROM technical_task_operations WHERE id = ?

operations.selectById = SELECT * FROM technical_task_operations WHERE id = ?

operations.selectByTechnicalTask = SELECT * FROM technical_task_operations WHERE technical_task_id = ?

#######################################################################################################################
#                                              Requests For Developers SQL properties                                 #
#######################################################################################################################
developersRequest.insertSQL = INSERT INTO requests_for_developers (operation_id, specialization, rank, quantity) \
                              VALUES (?, ?, ?, ?)

developersRequest.update = UPDATE requests_for_developers SET operation_id = ?, specialization = ?, rank = ?, quantity = ? \
                           WHERE operation_id = ? AND specialization = ?  AND rank = ? AND quantity = ?

developersRequest.delete = DELETE FROM requests_for_developers \
                           WHERE operation_id = ? AND specialization = ? AND rank = ? AND quantity = ?

developersRequest.selectByOperation = SELECT * FROM requests_for_developers WHERE operation_id = ?

#######################################################################################################################
#                                              Project SQL properties                                                 #
#######################################################################################################################
project.insertSQL = INSERT INTO projects (technical_task_id, customer_id, manager_id, name, description, manager_commentary, \
                    start_date, end_date, status) \
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)

project.update = UPDATE projects SET id = ?, technical_task_id = ?, customer_id = ?, manager_id = ?, name = ?, description = ?, \
                 manager_commentary = ?, start_date = ?, end_date = ?, status = ?\
                 WHERE id = ?

project.delete = DELETE FROM projects WHERE id = ?

project.selectById = SELECT projects.*, (services + taxes + developers_cost) AS totalCost \
                     FROM projects \
                     LEFT JOIN checks \
                     ON projects.id = checks.project_id \
                     WHERE id = ?

project.selectByManager = SELECT projects.*, (services + taxes + developers_cost) AS totalCost \
                          FROM projects \
                          LEFT JOIN checks \
                          ON projects.id = checks.project_id \
                          WHERE manager_id = ?

project.selectByManagerAndStatus = SELECT projects.*, (services + taxes + developers_cost) AS totalCost \
                                   FROM projects \
                                   LEFT JOIN checks \
                                   ON projects.id = checks.project_id \
                                   WHERE manager_id = ? AND projects.status = ?

project.selectCompleteByManager = SELECT projects.*, (services + taxes + developers_cost) AS totalCost \
                                  FROM projects \
                                  LEFT JOIN checks \
                                  ON projects.id = checks.project_id \
                                  WHERE manager_id = ? \
                                  AND projects.status IN ('Declined', 'Canceled', 'Complete')

#######################################################################################################################
#                                              Project Task SQL properties                                            #
#######################################################################################################################
projectTask.insertSQL = INSERT INTO project_tasks (project_id, operation_id, name, description, status) \
                        VALUES (?, ?, ?, ?, ?)

projectTask.update = UPDATE project_tasks SET id = ?, project_id = ?, operation_id = ?, name = ?, description = ?, status = ? \
                     WHERE id = ?

projectTask.delete = DELETE FROM project_tasks WHERE id = ?

projectTask.selectById = SELECT project_tasks.*, SUM(hours_spent) as total_hours_spent \
                         FROM project_tasks \
                         LEFT JOIN task_developers ON id = task_id \
                         WHERE id = ? \
                         GROUP BY id, project_id, operation_id, name, description, project_tasks.status

projectTask.selectByProject = SELECT project_tasks.*, SUM(hours_spent) as total_hours_spent \
                              FROM project_tasks \
                              LEFT JOIN task_developers ON id = task_id \
                              WHERE project_id = ? \
                              GROUP BY id, project_id, operation_id, name, description, project_tasks.status

#######################################################################################################################
#                                              Task Development SQL properties                                        #
#######################################################################################################################
taskDevelopers.insertSQL = INSERT INTO task_developers (task_id, developer_id, hours_spent, status) VALUES (?, ?, ?, ?)

taskDevelopers.insertDefault = INSERT INTO task_developers (task_id, developer_id) VALUES (?, ?)

taskDevelopers.update = UPDATE task_developers SET task_id = ?, developer_id = ?, hours_spent = ?, status = ? \
                        WHERE task_id = ? AND developer_id = ?

taskDevelopers.updateStatusByProject = UPDATE task_developers SET status = ? \
                                       WHERE task_id IN(SELECT id FROM project_tasks WHERE project_id = ?)

taskDevelopers.delete = DELETE FROM task_developers WHERE task_id = ? AND developer_id = ?

taskDevelopers.deleteAllByProject = DELETE FROM task_developers \
                                    WHERE task_id IN(SELECT id FROM project_tasks WHERE project_id = ?)

taskDevelopers.selectByTask = SELECT task_developers.*, first_name, last_name, specialization, rank, hire_cost \
                              FROM task_developers \
                              INNER JOIN developers ON developers.id = task_developers.developer_id \
                              WHERE task_id = ?

taskDevelopers.selectByProject = SELECT task_developers.*, first_name, last_name, specialization, rank, hire_cost \
                                 FROM task_developers \
                                 INNER JOIN developers ON developers.id = task_developers.developer_id \
                                 WHERE task_id IN(SELECT id FROM project_tasks WHERE project_id = ?)

taskDevelopers.selectByTaskAndDeveloper = SELECT task_developers.*, first_name, last_name, specialization, rank, hire_cost \
                                          FROM task_developers \
                                          INNER JOIN developers ON developers.id = task_developers.developer_id \
                                          WHERE task_id = ? AND developer_id = ?

taskDevelopers.selectByDeveloperAndStatus = SELECT task_developers.*, first_name, last_name, specialization, rank, hire_cost \
                                            FROM task_developers \
                                            INNER JOIN developers ON developers.id = task_developers.developer_id \
                                            WHERE developer_id = ? AND task_developers.status = ?

#######################################################################################################################
#                                              Check SQL properties                                                   #
#######################################################################################################################
check.insertSQL = INSERT INTO checks (project_id, developers_cost, services, taxes, status) \
                  VALUES (?, ?, ?, ?, ?)

check.update = UPDATE checks SET project_id = ?, developers_cost = ?, services = ?, taxes = ?, status = ? \
               WHERE project_id = ?

check.delete = DELETE FROM checks WHERE project_id = ?

check.selectByProject = SELECT checks.*, name \
                        FROM checks \
                        INNER JOIN projects ON projects.id = checks.project_id \
                        WHERE project_id = ?

check.selectByCustomer = SELECT checks.*, name \
                         FROM checks \
                         INNER JOIN projects ON projects.id = checks.project_id \
                         WHERE project_id IN \
                        (SELECT id FROM projects WHERE customer_id = ?)

check.selectNewByCustomer = SELECT checks.*, name \
                            FROM checks \
                            INNER JOIN projects ON projects.id = checks.project_id \
                            WHERE project_id IN \
                            (SELECT id FROM projects WHERE customer_id = ?) \
                            AND checks.status = 'Awaiting'

check.selectCompleteByCustomer = SELECT checks.*, name \
                                 FROM checks \
                                 INNER JOIN projects ON projects.id = checks.project_id \
                                 WHERE project_id IN \
                                 (SELECT id FROM projects WHERE customer_id = ?) \
                                 AND checks.status != 'Awaiting'

#######################################################################################################################
#                                              Users  SQL properties                                                  #
#######################################################################################################################
users.selectUser = SELECT * FROM \
                      (SELECT id, first_name, last_name, email, phone, password, roles.role_value as role \
                      FROM developers \
                      INNER JOIN roles ON roles.role_id = developers.role_id \
                      UNION \
                      SELECT id, first_name, last_name, email, phone, password, roles.role_value as role \
                      FROM managers \
                      INNER JOIN roles ON roles.role_id = managers.role_id \
                      UNION \
                      SELECT id, first_name, last_name, email, phone, password, roles.role_value as role \
                      FROM customers \
                      INNER JOIN roles ON roles.role_id = customers.role_id) AS result \
                      WHERE email = ?

users.persistsByEmail = SELECT email FROM \
                       (SELECT email FROM developers) \
                       UNION \
                       SELECT email FROM managers \
                       UNION \
                       SELECT email FROM customers) AS result \
                       WHERE email = ?

users.persistsByPhone = SELECT phone FROM \
                       (SELECT phone FROM developers \
                       UNION \
                       SELECT phone FROM managers \
                       UNION \
                       SELECT phone FROM customers) AS result \
                       WHERE phone = ?